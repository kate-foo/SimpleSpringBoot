spring: 
   config:
      activate:
         on-profile: dev
         
   security:
      oauth2:
         client:
            registration:
               google:
                  client-id: 745290466201-s3hds5obh1o6mamhdb8blcop3a87v5i0.apps.googleusercontent.com
                  client-secret: pwQvJae56hmtM_d6PnXTKIk_
                  scope: profile, email
                  redirect-uri: http://localhost:8080/oauth2/callback/google
                  client-name: google                           
               naver:
                  client-id: LSB9C9lp5mhsmE4sXORv
                  client-secret: dEmml1QMIh
                  redirect-uri: http://localhost:8080/oauth2/callback/naver
                  authorization-grant-type: authorization_code
                  client-name: naver
            provider:
               naver:
                  authorization-uri: https://nid.naver.com/oauth2.0/authorize
                  token-uri: https://nid.naver.com/oauth2.0/token
                  user-info-uri: https://openapi.naver.com/v1/nid/me
                  user-name-attribute: response  
                  
logging:
  config: classpath:log4j2.xml
                  
                      
jwt:
   toekn-issuer: foo.com
   token-name: foo-app-jwt
   secret: 12345
   expire-time: 300 #sec

# 프론트엔드 애플리케이션은 어차피 SPA
frontend-app:
   entry: /index.html

# 관리자 계정
admins:
   - 55XXXXXX
   - 57XXXXXX

my-props:    
   name:
      point: 200

---

spring: 
   config:
      activate:
         on-profile: prod 
         
         
   security:
      oauth2:
         client:
            registration:
               google:
                  client-id: 745290466201-s3hds5obh1o6mamhdb8blcop3a87v5i0.apps.googleusercontent.com
                  client-secret: pwQvJae56hmtM_d6PnXTKIk_
                  scope: profile
                  redirect-uri: http://www.foo.com/oauth2/callback/google
                  client-name: google                           
               naver:
                  client-id: LSB9C9lp5mhsmE4sXORv
                  client-secret: dEmml1QMIh 
                  redirect-uri: http://www.foo.com/oauth2/callback/naver
                  authorization-grant-type: authorization_code
                  client-name: naver
            provider:
               naver:
                  authorization-uri: https://nid.naver.com/oauth2.0/authorize
                  token-uri: https://nid.naver.com/oauth2.0/token
                  user-info-uri: https://openapi.naver.com/v1/nid/me
                  user-name-attribute: response
                  
logging:
  config: classpath:log4j2.xml
                              

jwt:
   toekn-issuer: foo.com
   token-name: foo-app-jwt
   secret: 12345
   expire-time: 300 #sec

frontend-app:
   entry: /index.html
   
my-props:    
   name:
      point: 200
